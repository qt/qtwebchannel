/****************************************************************************
**
** Copyright (C) 2014 Klar√§lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author Milian Wolff <milian.wolff@kdab.com>
** Contact: http://www.qt-project.org/legal
**
** This file is part of the QtWebChannel module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Digia gives you certain additional
** rights.  These rights are described in the Digia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \example standalone
    \title Standalone Example
    \ingroup qtwebchannel-examples
    \brief Shows how to use the QWebChannel API to communicate with an external client.

    The standalone example is a simple chat between a pure C++/Qt application and a remote HTML
    client running in your default browser.

    The C++ app sets up a WebChannel and publishes a Dialog object over it. The same object
    For the remote client side, \c index.html is opened. Both show a dialog with the list of
    received messages and an input box to send messages to the other end.

    The Dialog emits the Dialog::sendText signal when the user sents a message. The signal
    automatically gets propagated to the HTML client. When the user enters a message on the HTML
    side, Dialog::receiveText is called.

    All communication between the HTML client and the C++/Qt server is done over a WebSocket.
    The C++ side instantiates a QWebSocketServer and wraps incoming QWebSocket connections
    in a class that implements the QMessagePassingInterface. These objects are then handed over
    to the QWebChannel.

    \sa {QML Example}
*/
